import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import { useMutation } from "react-query";
import clock_icon from "../assets/images/clock.png";
import download_icon from "../assets/images/download.png";
import no_sound_icon from "../assets/images/no-sound.png";
import search_icon from "../assets/images/search.svg";
import sound_icon from "../assets/images/sound.png";
import API from "../service/API";

export default function Home() {
  const ref = useRef(null);
  const [data, setData] = useState({});
  const { mutate, error, isLoading } = useMutation({
    mutationFn: (val) => API.search(val),
  });

  function onSubmit(e) {
    e.preventDefault();
    const url = ref.current.value;
    mutate(url, {
      onSuccess: (data) => {
        setData(data);
      },
      onError: (error) => {
        setData({});
      },
    });
  }

  async function download(url) {
    fetch(url, {
      method: "GET",
    })
      .then((response) => {
        console.log(response.headers);
      })
      .catch((error) => {
        console.log(error.message);
      });
  }

  useEffect(() => {
    const url = ref.current.value;
    if(!url) return;
    mutate(url, {
      onSuccess: (data) => {
        setData(data);
      },
      onError: (error) => {
        setData({});
      },
    });
  }, []);

  return (
    <>
      <Head>
        <title>Youtube Video Downloader</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <section>
          <div className="container">
            <form
              onSubmit={onSubmit}
              className="my-3 mt-10 flex bg-white/30 rounded-full px-3 overflow-hidden border border-indigo-50/20
            shadow-xl shadow-indigo-600/10"
            >
              <input
                type="text"
                disabled={isLoading}
                ref={ref}
                className="input grow bg-transparent outline-0 hover:bg-indigo-100/5 focus:bg-indigo-100/5 placeholder:text-indigo-900/60 placeholder:font-normal placeholder:font-mono"
                placeholder="Youtube video link..."
              />
              <button type="submit" className="px-2" disabled={isLoading}>
                <img src={search_icon.src} alt="" className="w-12 h-12" />
              </button>
            </form>

            {/* LOADING BAR */}
            <div className="mt-6">
              {isLoading ? (
                <p className="text-center text-sm font-semibold tracking-wider text-white">
                  Loading...
                </p>
              ) : (
                <></>
              )}
              <div className="rounded-full h-3 w-24 bg-indigo-50 mx-auto shadow-lg shadow-indigo-600/20" />
            </div>
          </div>
        </section>
        <section className="py-10">
          <div className="container">
            {/* INFO */}
            <figure className="p-2 bg-white/20 rounded-md border-2 pb-4 border-indigo-100">
              <img
                src={data.thumbnail}
                alt={data?.title}
                className="rounded-md w-full shadow-lg shadow-indigo-600/40"
              />
              <div className="mt-4">
                {!!data?.keywords?.length ? (
                  <div className="flex flex-wrap mt-3 gap-2">
                    <span className="inline-flex gap-2 justify-center items-center py-1 px-2 text-xs bg-indigo-500 rounded-sm font-medium text-white tracking-wider">
                      <img
                        src={clock_icon.src}
                        alt=""
                        className="w-4 h-4 rounded-full inline-block"
                      />{" "}
                      {Math.floor(data?.length / 60)}m{" "}
                      {Math.round(
                        (data?.length / 60 - Math.floor(data?.length / 60)) * 60
                      )}
                      s
                    </span>
                    {data?.keywords?.map((element) => (
                      <span
                        className="inline-block py-1 px-2 text-xs bg-indigo-500 rounded-sm font-medium text-white tracking-wider"
                        key={element}
                      >
                        {element}
                      </span>
                    ))}
                  </div>
                ) : null}
                <h5 className="text-base font-semibold text-slate-800 mt-2">
                  {data?.title}
                </h5>
                <hr className="w-1/2 my-2 h-1 rounded-xl bg-gradient-to-r from-indigo-400" />
                <p className="text-sm text-slate-700">{data?.desc}</p>
              </div>
            </figure>

            {/* Formets */}
            <div className="mt-6">
              {data?.formets?.map((ele) => (
                <figure className="p-2 mb-4 rounded-md border-2 border-dashed border-indigo-50 bg-white/10 shadow-lg shadow-indigo-500/20 flex gap-2 justify-center items-center">
                  <img
                    src={ele.hasAudio ? sound_icon.src : no_sound_icon.src}
                    alt={ele.hasAudio ? "sound" : "no-sound"}
                    className="w-16 h-16 rounded-md drop-shadow-md"
                  />
                  <div className="flex-grow">
                    <h4 className="text-2xl font-mono font-semibold tracking-wider text-slate-900">
                      {ele?.quality || "--- ---"}
                    </h4>
                    <span className="inline-block py-1 px-2 rounded-md leading-5 shadow-md shadow-indigo-600/30 bg-slate-600 text-sm text-white font-mono font-semibold tracking-wider mr-2">
                      {ele?.size || "0"} MB
                    </span>
                    <span className="inline-block py-1 px-2 rounded-md leading-5 shadow-md shadow-indigo-600/30 bg-white/40  text-sm text-slate-800 font-mono font-semibold tracking-wider">
                      {ele?.type || "Video"}
                    </span>
                  </div>
                  <a
                    href={ele?.url}
                    target="_blank"
                    download={ele.title}
                    onClick={async () => await download(ele.url)}
                    className="w-12 h-12 p-1 rounded-md bg-white/20 shadow-lg shadow-indigo-600/30 border-dashed hover:border-solid active:border-4 border-2 border-indigo-500"
                  >
                    <img
                      src={download_icon.src}
                      alt=""
                      className=" w-full drop-shadow-lg"
                    />
                  </a>
                </figure>
              ))}
            </div>
          </div>
        </section>
      </main>
    </>
  );
}
